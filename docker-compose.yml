version: "3"

services:
  broker1:
    image: confluentinc/cp-kafka:7.5.2
    container_name: $BROKER1
    hostname: $BROKER1
    ports: [ "9092:9092" ]
    env_file:
      - '.env'
    environment:
      KAFKA_NODE_ID: $ID1
      KAFKA_LISTENERS: CONTROLLER://$BROKER1:29093,INTERNAL://$BROKER1:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://$BROKER1:29092,EXTERNAL://localhost:9092
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: $ID1@$BROKER1:29093,$ID2@$BROKER2:29093,$ID3@$BROKER3:29093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      BROKER: $BROKER1
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.$BROKER1.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: ${BROKER1}_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: ${BROKER1}_sslkey_creds
    volumes:
      - ./secrets/$BROKER1:/etc/kafka/secrets
      - ./init.sh:/etc/init.sh
    command:
      - sh 
      - -c
      - cd /etc/ && ./init.sh
  broker2:
    image: confluentinc/cp-kafka:7.5.2
    container_name: $BROKER2
    hostname: $BROKER2
    ports: [ "9093:9092" ]
    env_file:
      - '.env'
    environment:
      KAFKA_NODE_ID: $ID2
      KAFKA_LISTENERS: CONTROLLER://$BROKER2:29093,INTERNAL://$BROKER2:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://$BROKER2:29092,EXTERNAL://localhost:9092
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: $ID1@$BROKER1:29093,$ID2@$BROKER2:29093,$ID3@$BROKER3:29093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      BROKER: $BROKER2
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.$BROKER2.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: ${BROKER2}_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: ${BROKER2}_sslkey_creds
    volumes:
      - ./secrets/$BROKER2:/etc/kafka/secrets
      - ./init.sh:/etc/init.sh
    command:
      - sh 
      - -c
      - cd /etc/ && ./init.sh

  broker3:
    image: confluentinc/cp-kafka:7.5.2
    container_name: $BROKER3
    hostname: $BROKER3
    ports: [ "9094:9092" ]
    env_file:
      - '.env'
    environment:
      KAFKA_NODE_ID: $ID3
      KAFKA_LISTENERS: CONTROLLER://$BROKER3:29093,INTERNAL://$BROKER3:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://$BROKER3:29092,EXTERNAL://localhost:9092
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: $ID1@$BROKER1:29093,$ID2@$BROKER2:29093,$ID3@$BROKER3:29093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      BROKER: $BROKER3
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.$BROKER3.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: ${BROKER3}_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: ${BROKER3}_sslkey_creds
    volumes:
      - ./secrets/$BROKER3:/etc/kafka/secrets
      - ./init.sh:/etc/init.sh
    command:
      - sh 
      - -c
      - cd /etc/ && ./init.sh
  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.2
    container_name: schema-registry
    depends_on:
      - broker1
      - broker2
      - broker3
    ports: [ "8081:8081" ]
    env_file:
      - '.env'
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: $BROKER1:29092,$BROKER2:29092,$BROKER3:29092 
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_PLAINTEXT
      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: PLAIN
      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="client" \
        password="${USER_CLIENT}";
      # command:
      #   - sh
      #   - -c
      #   - |
      #     echo 'KafkaClient {
      #       org.apache.kafka.common.security.plain.PlainLoginModule required
      #       username="client"
      #       password="${USER_CLIENT}";
      #     };' > /etc/schema-registry/kafka_client_jaas.conf
      #     /etc/confluent/docker/run
      # SCHEMA_REGISTRY_OPTS: -Djava.security.auth.login.config=/etc/schema-registry/kafka_client_jaas.conf

